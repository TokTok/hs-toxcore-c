load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("//third_party/haskell/hspec-discover:build_defs.bzl", "hspec_test")
load("//tools/project:build_defs.bzl", "project")

project(license = "gpl3-https")

#[genrule(
#    name = "api_" + src[:-2].replace("/", "_"),
#     srcs = ["//c-toxcore:" + src],
#     outs = ["src/FFI/%s.hs" % "/".join([mod.capitalize() for mod in src[:-2].split("/")])],
#     cmd = "$(location //hs-apigen/tools:apigen) -hs $< > $@",
#     tools = ["//hs-apigen/tools:apigen"],
#     tags = ["no-cross", "haskell"],
# ) for src in [
#     "tox/tox.h",
# ]]

haskell_library(
    name = "hs-toxcore-c",
    srcs = glob(
        ["src/**/*.*hs"],
        #exclude = ["src/FFI/**"],
    ) + [
        #":api_tox_tox",
    ],
    src_strip_prefix = "src",
    tags = [
        "haskell",
        "no-cross",
    ],
    version = "0.2.20",
    visibility = ["//visibility:public"],
    deps = [
        "//c-toxcore",
        "//hs-msgpack-binary",
        "//third_party/haskell:QuickCheck",
        "//third_party/haskell:base",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:generic-arbitrary",
        "//third_party/haskell:quickcheck-instances",
    ],
)

hspec_test(
    name = "testsuite",
    timeout = "short",
    deps = [
        ":hs-toxcore-c",
        "//hs-msgpack-binary",
        "//third_party/haskell:QuickCheck",
        "//third_party/haskell:base",
        "//third_party/haskell:base16-bytestring",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:cryptohash",
        "//third_party/haskell:hspec",
        "//third_party/haskell:saltine",
        "//third_party/haskell:vector",
    ],
)
